import { createId } from "@paralleldrive/cuid2";

export interface WordBookProps {
  id: string;
  userId: number;
  title: string;
}

export class WordBook {
  readonly id: string;
  readonly userId: number;
  readonly title: string;

  private constructor(id: string, userId: number, title: string) {
    this.id = id;
    this.userId = userId;
    this.title = title;
  }

  static create(props: Omit<WordBookProps, "id">): WordBook {
    // id will be generated by the database
    return new WordBook(createId(), props.userId, props.title);
  }

  static fromPersistence(props: WordBookProps): WordBook {
    return new WordBook(props.id, props.userId, props.title);
  }

  toJson(): WordBookProps {
    return {
      id: this.id,
      userId: this.userId,
      title: this.title,
    };
  }
}
