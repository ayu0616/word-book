import { WordBookId } from "./value-objects/word-book-id";
import { WordBookTitle } from "./value-objects/word-book-title";

export interface WordBookProps {
  id: string;
  userId: number;
  title: string;
}

export class WordBook {
  readonly id: WordBookId;
  readonly userId: number;
  readonly title: WordBookTitle;

  private constructor(id: WordBookId, userId: number, title: WordBookTitle) {
    this.id = id;
    this.userId = userId;
    this.title = title;
  }

  static create(props: Omit<WordBookProps, "id">): WordBook {
    // id will be generated by the database
    return new WordBook(
      WordBookId.create(),
      props.userId,
      WordBookTitle.from(props.title),
    );
  }

  static fromPersistence(props: WordBookProps): WordBook {
    return new WordBook(
      WordBookId.from(props.id),
      props.userId,
      WordBookTitle.from(props.title),
    );
  }

  toJson(): WordBookProps {
    return {
      id: this.id.value,
      userId: this.userId,
      title: this.title.value,
    };
  }
}
