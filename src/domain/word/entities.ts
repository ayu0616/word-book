export class Word {
  readonly id: number;
  readonly wordBookId: number;
  readonly term: string;
  readonly meaning: string;
  readonly createdAt: Date;
  consecutiveCorrectCount: number;
  nextReviewDate: Date;

  private constructor(
    id: number,
    wordBookId: number,
    term: string,
    meaning: string,
    createdAt: Date,
    consecutiveCorrectCount: number,
    nextReviewDate: Date,
  ) {
    this.id = id;
    this.wordBookId = wordBookId;
    this.term = term;
    this.meaning = meaning;
    this.createdAt = createdAt;
    this.consecutiveCorrectCount = consecutiveCorrectCount;
    this.nextReviewDate = nextReviewDate;
  }

  static create(props: {
    wordBookId: number;
    term: string;
    meaning: string;
  }): Word {
    // id will be generated by the database
    return new Word(
      0,
      props.wordBookId,
      props.term,
      props.meaning,
      new Date(),
      0,
      new Date(),
    );
  }

  static fromPersistence(props: {
    id: number;
    wordBookId: number;
    term: string;
    meaning: string;
    createdAt: Date;
    consecutiveCorrectCount: number;
    nextReviewDate: Date;
  }): Word {
    return new Word(
      props.id,
      props.wordBookId,
      props.term,
      props.meaning,
      props.createdAt,
      props.consecutiveCorrectCount,
      props.nextReviewDate,
    );
  }
}
